{"version":3,"sources":["webpack:///src/app/loans/add-edit.component.ts","webpack:///src/app/loans/add-edit.component.html","webpack:///src/app/loans/layout.component.ts","webpack:///src/app/loans/layout.component.html","webpack:///src/app/loans/list.component.ts","webpack:///src/app/loans/list.component.html","webpack:///src/app/loans/loans-routing.module.ts","webpack:///src/app/loans/loans.module.ts"],"names":["AddEditComponent","formBuilder","route","router","loanService","alertService","accountService","loading","submitted","e","console","log","target","value","rate","IntrestRate","setValue","onlySelf","id","snapshot","params","isAddMode","passwordValidators","minLength","push","required","Loanform","group","loanType","loanAmount","roi","duration","userName","userValue","username","applyDate","accountHolder","getById","pipe","subscribe","x","patchValue","clear","invalid","createLoan","updateLoan","register","next","success","keepAfterRouteChange","navigate","relativeTo","error","update","get","controls","onSubmit","onChangeLoan","templateUrl","LayoutComponent","ListComponent","loans","getAll","filter","currentUser","loan","find","isDeleting","routes","path","component","children","LoansRoutingModule","forChild","imports","exports","LoansModule","declarations"],"mappings":"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","file":"loans-loans-module-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { first } from 'rxjs/operators';\r\n\r\nimport { LoanService, AlertService , AccountService} from '../_services';\r\nimport { User } from '@app/_models';\r\n\r\n@Component({ templateUrl: 'add-edit.component.html' })\r\nexport class AddEditComponent implements OnInit {\r\n    Loanform: FormGroup;\r\n    id: number;\r\n    isAddMode: boolean;\r\n    loading = false;\r\n    submitted = false;\r\n\r\n    constructor(\r\n        private formBuilder: FormBuilder,\r\n        private route: ActivatedRoute,\r\n        private router: Router,\r\n        private loanService: LoanService,\r\n        private alertService: AlertService,\r\n        private accountService: AccountService\r\n    ) {}\r\n\r\n\r\n    // Choose loan using select dropdown\r\n  onChangeLoan(e) {\r\n    console.log(e.target.value)\r\n    let rate: string;\r\n    if(e.target.value === 'Personal')\r\n    {\r\n        rate = \"13\"\r\n    }\r\n    else if(e.target.value === 'Home')\r\n    {\r\n        rate = \"7\"\r\n    }\r\n    else if(e.target.value === 'Education')\r\n    {\r\n        rate = \"6\"\r\n    }\r\n    else{ rate = \"\" }\r\n    this.IntrestRate.setValue(rate , {\r\n        onlySelf: false\r\n        })\r\n  }\r\n    \r\n      // Getter method to access formcontrols\r\n     get LoanName() {\r\n        return this.Loanform.get('loanType');\r\n     }\r\n     \r\n      // Getter method to access formcontrols\r\n      get IntrestRate() {\r\n        return this.Loanform.get('roi');\r\n     }   \r\n\r\n    ngOnInit() {\r\n        this.id = this.route.snapshot.params['id'];\r\n        this.isAddMode = !this.id;\r\n        \r\n        // password not required in edit mode\r\n        const passwordValidators = [Validators.minLength(6)];\r\n        if (this.isAddMode) {\r\n            passwordValidators.push(Validators.required);\r\n        }\r\n        \r\n        \r\n        this.Loanform = this.formBuilder.group({\r\n            loanType: ['', Validators.required],\r\n            loanAmount: ['', Validators.required],\r\n            roi: ['', Validators.required],\r\n            duration: ['', Validators.required],\r\n            userName: this.accountService.userValue.username,\r\n            applyDate: ['', Validators.required],\r\n            accountHolder: ['', Validators.required],\r\n            id: this.id\r\n        });\r\n       \r\n\r\n        if (!this.isAddMode) {\r\n            this.loanService.getById(this.id)\r\n                .pipe(first())\r\n                .subscribe(x => this.Loanform.patchValue(x));\r\n        }\r\n    }\r\n\r\n    // convenience getter for easy access to form fields\r\n    get f() { return this.Loanform.controls; }\r\n\r\n    onSubmit() {\r\n        this.submitted = true;\r\n\r\n        // reset alerts on submit\r\n        this.alertService.clear();\r\n\r\n        // stop here if form is invalid\r\n        if (this.Loanform.invalid) {\r\n            return;\r\n        }\r\n\r\n        this.loading = true;\r\n        if (this.isAddMode) {\r\n            this.createLoan();\r\n        } else {\r\n            this.updateLoan();\r\n        }\r\n    }\r\n\r\n    private createLoan() {\r\n        console.log(this.Loanform.value);\r\n        this.loanService.register(this.Loanform.value)\r\n            .pipe(first())\r\n            .subscribe({\r\n                next: () => {\r\n                    this.alertService.success('Loan applied successfully', { keepAfterRouteChange: true });\r\n                    this.router.navigate(['../'], { relativeTo: this.route });\r\n                },\r\n                error: error => {\r\n                    this.alertService.error(error);\r\n                    this.loading = false;\r\n                }\r\n            });\r\n    }\r\n\r\n    private updateLoan() {\r\n        console.log(this.Loanform.value);\r\n        this.loanService.update(this.id, this.Loanform.value)\r\n            .pipe(first())\r\n            .subscribe({\r\n                next: () => {\r\n                    this.alertService.success('Update successful', { keepAfterRouteChange: true });\r\n                    this.router.navigate(['../../'], { relativeTo: this.route });\r\n                },\r\n                error: error => {\r\n                    this.alertService.error(error);\r\n                    this.loading = false;\r\n                }\r\n            });\r\n    }\r\n}","<h1 *ngIf=\"isAddMode\">Apply Loan</h1>\r\n<h1 *ngIf=\"!isAddMode\">Update Loan</h1>\r\n<form [formGroup]=\"Loanform\" (ngSubmit)=\"onSubmit()\">\r\n    <div class=\"form-row\">\r\n        <div class=\"form-group col\">\r\n            <label for=\"loanType\">Loan Type</label>\r\n            <select formControlName=\"loanType\" class=\"custom-select\" (change)=\"onChangeLoan($event)\" [ngClass]=\"{ 'is-invalid': submitted && f.loanType.errors }\">\r\n                <option value=\"\"></option>\r\n                <option value=\"Personal\">Personal</option>\r\n                <option value=\"Home\">Home</option>\r\n                <option value=\"Education\">Education</option>\r\n            </select>\r\n            <div *ngIf=\"submitted && f.loanType.errors\" class=\"invalid-feedback\">\r\n                <div *ngIf=\"f.loanType.errors.required\">Loan type is required</div>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group col\">\r\n            <label for=\"loanAmount\">Loan Amount</label>\r\n            <input type=\"text\" formControlName=\"loanAmount\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.loanAmount.errors }\" />\r\n            <div *ngIf=\"submitted && f.loanAmount.errors\" class=\"invalid-feedback\">\r\n                <div *ngIf=\"f.loanAmount.errors.required\">Loan amount is required</div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"form-row\">\r\n        <div class=\"form-group col\">\r\n            <label for=\"roi\">Interest Rate(%)</label>\r\n            <input type=\"text\" readonly formControlName=\"roi\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.roi.errors }\" />\r\n            <div *ngIf=\"submitted && f.roi.errors\" class=\"invalid-feedback\">\r\n                <div *ngIf=\"f.roi.errors.required\">Interest rate is required</div>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group col\">\r\n            <label for=\"duration\">Loan Duration</label>\r\n            <select formControlName=\"duration\" class=\"custom-select\" [ngClass]=\"{ 'is-invalid': submitted && f.duration.errors }\">\r\n                <option value=\"\"></option>\r\n                <option value=\"5\">5 yrs</option>\r\n                <option value=\"10\">10 yrs</option>\r\n                <option value=\"15\">15 yrs</option>\r\n                <option value=\"20\">20 yrs</option>\r\n            </select>\r\n            <div *ngIf=\"submitted && f.duration.errors\" class=\"invalid-feedback\">\r\n                <div *ngIf=\"f.duration.errors.required\">Duration is required</div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"form-row\">\r\n        <div class=\"form-group col\">\r\n            <label for=\"applyDate\">Loan Date :</label>\r\n            <mat-form-field class=\"example-full-width\">\r\n                <input\r\n                matInput\r\n                [matDatepicker]=\"applyDate\"\r\n                formControlName=\"applyDate\"\r\n                [ngClass]=\"{ 'is-invalid': submitted && f.applyDate.errors }\">\r\n            <mat-datepicker-toggle matSuffix [for]=\"applyDate\"></mat-datepicker-toggle>\r\n            <mat-datepicker #applyDate></mat-datepicker>\r\n          </mat-form-field>\r\n            <div *ngIf=\"submitted && f.applyDate.errors\" class=\"invalid-feedback\">\r\n                <div *ngIf=\"f.applyDate.errors.required\">Loan Date is required</div>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group col\">\r\n            <label for=\"accountHolder\">Account Holder</label>\r\n            <input type=\"text\"  formControlName=\"accountHolder\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.accountHolder.errors }\" />\r\n            <div *ngIf=\"submitted && f.accountHolder.errors\" class=\"invalid-feedback\">\r\n                <div *ngIf=\"f.accountHolder.errors.required\">Account holder is required</div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"form-group\">\r\n        <button [disabled]=\"loading\" class=\"btn btn-primary\">\r\n            <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\r\n            Save\r\n        </button>\r\n        <a routerLink=\"/loans\" class=\"btn btn-link\">Cancel</a>\r\n    </div>\r\n</form>","import { Component } from '@angular/core';\r\n\r\n@Component({ templateUrl: 'layout.component.html' })\r\nexport class LayoutComponent { }","<div class=\"p-4\">\r\n    <div class=\"container\">\r\n        <router-outlet></router-outlet>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { first } from 'rxjs/operators';\r\n\r\nimport { LoanService, AccountService } from '../_services';\r\n\r\n@Component({ templateUrl: 'list.component.html' })\r\nexport class ListComponent implements OnInit {\r\n    loans = null;\r\n    \r\n    constructor(private loanService: LoanService, private accountService: AccountService) {}\r\n    \r\n    ngOnInit() {\r\n        this.loanService.getAll()\r\n            .pipe(first())\r\n            .subscribe(loans => this.loans = loans.filter(x => x.userName === this.accountService.currentUser.username));\r\n    }\r\n\r\n    deleteLoan(id: string) {\r\n        const loan = this.loans.find(x => x.id === id);\r\n        loan.isDeleting = true;\r\n        this.loanService.delete(id)\r\n            .pipe(first())\r\n            .subscribe(() => this.loans = this.loans.filter(x => x.id !== id));\r\n    }\r\n}","\r\n<a routerLink=\"add\" class=\"btn btn-sm btn-success mb-2\">Apply Loan</a>\r\n<h1>Applied Loans</h1>\r\n<table class=\"table table-striped\">\r\n    <thead>\r\n        <tr>\r\n            <th style=\"width: 20%\">Loan Type</th>\r\n            <th style=\"width: 20%\">Loan Amount</th>\r\n            <th style=\"width: 20%\">Rate of Intrest</th>\r\n            <th style=\"width: 20%\">Duration</th>\r\n            <th style=\"width: 30%\">Account Holder</th>\r\n            <th style=\"width: 10%\"></th>\r\n        </tr>\r\n    </thead>\r\n    <tbody>\r\n        <tr *ngFor=\"let loan of loans\">\r\n            <td>{{loan.loanType}}</td>\r\n            <td>{{loan.loanAmount}}</td>\r\n            <td>{{loan.roi}}</td>\r\n            <td>{{loan.duration}} yrs</td>\r\n            <td>{{loan.accountHolder}}</td>\r\n            <td style=\"white-space: nowrap\">\r\n                <a routerLink=\"edit/{{loan.id}}\" class=\"btn btn-sm btn-primary mr-1\">Edit</a>\r\n                <button (click)=\"deleteLoan(loan.id)\" class=\"btn btn-sm btn-danger btn-delete-user\" [disabled]=\"loan.isDeleting\">\r\n                    <span *ngIf=\"loan.isDeleting\" class=\"spinner-border spinner-border-sm\"></span>\r\n                    <span *ngIf=\"!loan.isDeleting\">Delete</span>\r\n                </button>\r\n            </td>\r\n        </tr>\r\n        <tr *ngIf=\"!loans\">\r\n            <td colspan=\"4\" class=\"text-center\">\r\n                <span class=\"spinner-border spinner-border-lg align-center\"></span>\r\n            </td>\r\n        </tr>\r\n    </tbody>\r\n</table>","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { LayoutComponent } from './layout.component';\r\nimport { ListComponent } from './list.component';\r\nimport { AddEditComponent } from './add-edit.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '', component: LayoutComponent,\r\n        children: [\r\n            { path: '', component: ListComponent },\r\n            { path: 'add', component: AddEditComponent },\r\n            { path: 'edit/:id', component: AddEditComponent }\r\n        ]\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class LoansRoutingModule { }","import { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { LoansRoutingModule } from './loans-routing.module';\r\nimport { LayoutComponent } from './layout.component';\r\nimport { ListComponent } from './list.component';\r\nimport { AddEditComponent } from './add-edit.component';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatNativeDateModule } from '@angular/material/core';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        ReactiveFormsModule,\r\n        LoansRoutingModule,\r\n        MatDatepickerModule,\r\n        MatNativeDateModule,\r\n        MatInputModule\r\n    ],\r\n    declarations: [\r\n        LayoutComponent,\r\n        ListComponent,\r\n        AddEditComponent\r\n    ]\r\n})\r\nexport class LoansModule { }"]}