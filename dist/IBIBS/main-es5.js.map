{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/_components/alert.component.ts","webpack:///src/app/_components/alert.component.html","webpack:///src/app/_components/index.ts","webpack:///src/app/_helpers/auth.guard.ts","webpack:///src/app/_helpers/error.interceptor.ts","webpack:///src/app/_helpers/fake-backend.ts","webpack:///src/app/_helpers/index.ts","webpack:///src/app/_helpers/jwt.interceptor.ts","webpack:///src/app/_models/alert.ts","webpack:///src/app/_models/index.ts","webpack:///src/app/_models/loan.ts","webpack:///src/app/_models/user.ts","webpack:///src/app/_services/account.service.ts","webpack:///src/app/_services/alert.service.ts","webpack:///src/app/_services/index.ts","webpack:///src/app/_services/loan.service.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/home/index.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AlertComponent","router","alertService","fade","alerts","alertSubscription","onAlert","subscribe","alert","message","filter","x","keepAfterRouteChange","forEach","push","autoClose","setTimeout","removeAlert","routeSubscription","events","event","clear","unsubscribe","includes","classes","alertTypeClass","Success","Info","Warning","type","join","selector","templateUrl","AuthGuard","accountService","route","state","user","userValue","navigate","queryParams","returnUrl","url","providedIn","ErrorInterceptor","request","next","handle","pipe","err","status","logout","error","statusText","console","usersKey","loansKey","users","JSON","parse","localStorage","getItem","loans","FakeBackendInterceptor","method","headers","body","handleRoute","endsWith","authenticate","register","getUsers","match","getUserById","updateUser","deleteUser","registerLoan","getLoans","getLoanById","updateLoan","deleteLoan","username","password","find","ok","basicDetails","token","length","Math","max","map","setItem","stringify","loan","isLoggedIn","unauthorized","basicLoanDetails","idFromUrl","params","Object","assign","toupdateid","firstName","lastName","country","email","contact","registrationDate","accountType","branchName","initialDepositAmount","idProofType","idDocNumber","gender","maritalStatus","refAccountholderAccountNumber","loanType","loanAmount","roi","duration","userName","applyDate","accountHolder","get","urlParts","split","parseInt","fakeBackendProvider","provide","useClass","multi","JwtInterceptor","isApiUrl","startsWith","apiUrl","clone","setHeaders","Authorization","Alert","init","AlertType","Loan","User","AccountService","http","userSubject","asObservable","post","removeItem","put","value","AlertService","subject","defaultId","options","LoanService","loanSubject","currentUser","loanValue","log","accountModule","AccountModule","usersModule","UsersModule","loansModule","LoansModule","routes","path","component","canActivate","loadChildren","redirectTo","AppRoutingModule","forRoot","imports","AppComponent","AppModule","declarations","providers","bootstrap","HomeComponent","environment","production","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit, OnDestroy, Input } from '@angular/core';\r\nimport { Router, NavigationStart } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { Alert, AlertType } from '@app/_models';\r\nimport { AlertService } from '@app/_services';\r\n\r\n@Component({ selector: 'alert', templateUrl: 'alert.component.html' })\r\nexport class AlertComponent implements OnInit, OnDestroy {\r\n    @Input() id = 'default-alert';\r\n    @Input() fade = true;\r\n\r\n    alerts: Alert[] = [];\r\n    alertSubscription: Subscription;\r\n    routeSubscription: Subscription;\r\n\r\n    constructor(private router: Router, private alertService: AlertService) { }\r\n\r\n    ngOnInit() {\r\n        // subscribe to new alert notifications\r\n        this.alertSubscription = this.alertService.onAlert(this.id)\r\n            .subscribe(alert => {\r\n                // clear alerts when an empty alert is received\r\n                if (!alert.message) {\r\n                    // filter out alerts without 'keepAfterRouteChange' flag\r\n                    this.alerts = this.alerts.filter(x => x.keepAfterRouteChange);\r\n\r\n                    // remove 'keepAfterRouteChange' flag on the rest\r\n                    this.alerts.forEach(x => delete x.keepAfterRouteChange);\r\n                    return;\r\n                }\r\n\r\n                // add alert to array\r\n                this.alerts.push(alert);\r\n\r\n                // auto close alert if required\r\n                if (alert.autoClose) {\r\n                    setTimeout(() => this.removeAlert(alert), 3000);\r\n                }\r\n           });\r\n\r\n        // clear alerts on location change\r\n        this.routeSubscription = this.router.events.subscribe(event => {\r\n            if (event instanceof NavigationStart) {\r\n                this.alertService.clear(this.id);\r\n            }\r\n        });\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        // unsubscribe to avoid memory leaks\r\n        this.alertSubscription.unsubscribe();\r\n        this.routeSubscription.unsubscribe();\r\n    }\r\n\r\n    removeAlert(alert: Alert) {\r\n        // check if already removed to prevent error on auto close\r\n        if (!this.alerts.includes(alert)) return;\r\n\r\n        if (this.fade) {\r\n            // fade out alert\r\n            alert.fade = true;\r\n\r\n            // remove alert after faded out\r\n            setTimeout(() => {\r\n                this.alerts = this.alerts.filter(x => x !== alert);\r\n            }, 250);\r\n        } else {\r\n            // remove alert\r\n            this.alerts = this.alerts.filter(x => x !== alert);\r\n        }\r\n    }\r\n\r\n    cssClass(alert: Alert) {\r\n        if (!alert) return;\r\n\r\n        const classes = ['alert', 'alert-dismissable', 'mt-4', 'container'];\r\n                \r\n        const alertTypeClass = {\r\n            [AlertType.Success]: 'alert alert-success',\r\n            [AlertType.Error]: 'alert alert-danger',\r\n            [AlertType.Info]: 'alert alert-info',\r\n            [AlertType.Warning]: 'alert alert-warning'\r\n        }\r\n\r\n        classes.push(alertTypeClass[alert.type]);\r\n\r\n        if (alert.fade) {\r\n            classes.push('fade');\r\n        }\r\n\r\n        return classes.join(' ');\r\n    }\r\n}","<div *ngFor=\"let alert of alerts\" class=\"{{cssClass(alert)}}\">\r\n    <a class=\"close\" (click)=\"removeAlert(alert)\">&times;</a>\r\n    <span [innerHTML]=\"alert.message\"></span>\r\n</div>","export * from './alert.component';\r\n","import { Injectable } from '@angular/core';\r\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\n\r\nimport { AccountService } from '@app/_services';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AuthGuard implements CanActivate {\r\n    constructor(\r\n        private router: Router,\r\n        private accountService: AccountService\r\n    ) {}\r\n\r\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n        const user = this.accountService.userValue;\r\n        if (user) {\r\n            // authorised so return true\r\n            return true;\r\n        }\r\n\r\n        // not logged in so redirect to login page with the return url\r\n        this.router.navigate(['/account/login'], { queryParams: { returnUrl: state.url }});\r\n        return false;\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\nimport { AccountService } from '@app/_services';\r\n\r\n@Injectable()\r\nexport class ErrorInterceptor implements HttpInterceptor {\r\n    constructor(private accountService: AccountService) {}\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        return next.handle(request).pipe(catchError(err => {\r\n            if ([401, 403].includes(err.status) && this.accountService.userValue) {\r\n                // auto logout if 401 or 403 response returned from api\r\n                this.accountService.logout();\r\n            }\r\n\r\n            const error = err.error?.message || err.statusText;\r\n            console.error(err);\r\n            return throwError(error);\r\n        }))\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpResponse, HttpHandler, HttpEvent, HttpInterceptor, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { Observable, of, throwError } from 'rxjs';\r\nimport { delay, materialize, dematerialize } from 'rxjs/operators';\r\nimport { Loan } from '../_models';\r\n\r\n// array in local storage for registered users\r\nconst usersKey = 'users-key';\r\nconst loansKey = 'loans-key';\r\nlet users = JSON.parse(localStorage.getItem(usersKey)) || [];\r\nlet loans = JSON.parse(localStorage.getItem(loansKey)) || [];\r\n\r\n@Injectable()\r\nexport class FakeBackendInterceptor implements HttpInterceptor {\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        const { url, method, headers, body } = request;\r\n\r\n        return handleRoute();\r\n\r\n        function handleRoute() {\r\n            switch (true) {\r\n                case url.endsWith('/users/authenticate') && method === 'POST':\r\n                    return authenticate();\r\n                case url.endsWith('/users/register') && method === 'POST':\r\n                    return register();\r\n                case url.endsWith('/users') && method === 'GET':\r\n                    return getUsers();\r\n                case url.match(/\\/users\\/\\d+$/) && method === 'GET':\r\n                    return getUserById();\r\n                case url.match(/\\/users\\/\\d+$/) && method === 'PUT':\r\n                    return updateUser();\r\n                case url.match(/\\/users\\/\\d+$/) && method === 'DELETE':\r\n                    return deleteUser();\r\n                   \r\n                    case url.endsWith('/loans/add') && method === 'POST':\r\n                        return registerLoan();\r\n                    case url.endsWith('/loans') && method === 'GET':\r\n                        return getLoans();\r\n                    case url.match(/\\/loans\\/\\d+$/) && method === 'GET':\r\n                        return getLoanById();\r\n                    case url.match(/\\/loans\\/\\d+$/) && method === 'PUT':\r\n                        return updateLoan();\r\n                    case url.match(/\\/loans\\/\\d+$/) && method === 'DELETE':\r\n                        return deleteLoan();\r\n\r\n                default:\r\n                    // pass through any requests not handled above\r\n                    return next.handle(request);\r\n            }    \r\n        }\r\n\r\n        // route functions\r\n        function authenticate() {\r\n            const { username, password } = body;\r\n            const user = users.find(x => x.username === username && x.password === password);\r\n            if (!user) return error('Username or password is incorrect');\r\n            return ok({\r\n                ...basicDetails(user),\r\n                token: 'fake-jwt-token'\r\n            })\r\n        }\r\n\r\n        function register() {\r\n            const user = body\r\n\r\n            if (users.find(x => x.username === user.username)) {\r\n                return error('Username \"' + user.username + '\" is already taken')\r\n            }\r\n\r\n            user.id = users.length ? Math.max(...users.map(x => x.id)) + 1 : 1;\r\n            users.push(user);\r\n            localStorage.setItem(usersKey, JSON.stringify(users));\r\n            return ok();\r\n        }\r\n\r\n        function registerLoan() {\r\n            const loan = body\r\n            loan.id = loans.length ? Math.max(...loans.map(x => x.id)) + 1 : 1;\r\n            loans.push(loan);\r\n            localStorage.setItem(loansKey, JSON.stringify(loans));\r\n            return ok();\r\n        }\r\n\r\n        function getUsers() {\r\n            if (!isLoggedIn()) return unauthorized();\r\n            return ok(users.map(x => basicDetails(x)));\r\n        }\r\n\r\n        function getLoans() {\r\n            if (!isLoggedIn()) return unauthorized();\r\n            return ok(loans.map(x => basicLoanDetails(x)));\r\n        }\r\n\r\n        function getUserById() {\r\n            if (!isLoggedIn()) return unauthorized();\r\n\r\n            const user = users.find(x => x.id === idFromUrl());\r\n            return ok(basicDetails(user));\r\n        }\r\n\r\n        function getLoanById() {\r\n            if (!isLoggedIn()) return unauthorized();\r\n\r\n            const loan = loans.find(x => x.id === idFromUrl());\r\n            loan.id = idFromUrl();\r\n            return ok(basicLoanDetails(loan));\r\n        }\r\n\r\n        function updateUser() {\r\n            if (!isLoggedIn()) return unauthorized();\r\n\r\n            let params = body;\r\n            let user = users.find(x => x.id === idFromUrl());\r\n\r\n            // only update password if entered\r\n            if (!params.password) {\r\n                delete params.password;\r\n            }\r\n\r\n            // update and save user\r\n            Object.assign(user, params);\r\n            localStorage.setItem(usersKey, JSON.stringify(users));\r\n\r\n            return ok();\r\n        }\r\n\r\n        function updateLoan() {\r\n            if (!isLoggedIn()) return unauthorized();\r\n\r\n            let toupdateid = idFromUrl();\r\n            let params = body;\r\n            let loan = loans.find(x => x.id === idFromUrl());\r\n            params.id = toupdateid;\r\n\r\n            // update and save user\r\n            Object.assign(loan, params);\r\n            localStorage.setItem(loansKey, JSON.stringify(loans));\r\n\r\n            return ok();\r\n        }\r\n\r\n        function deleteUser() {\r\n            if (!isLoggedIn()) return unauthorized();\r\n\r\n            users = users.filter(x => x.id !== idFromUrl());\r\n            localStorage.setItem(usersKey, JSON.stringify(users));\r\n            return ok();\r\n        }\r\n\r\n        function deleteLoan() {\r\n            if (!isLoggedIn()) return unauthorized();\r\n\r\n            loans = loans.filter(x => x.id !== idFromUrl());\r\n            localStorage.setItem(loansKey, JSON.stringify(loans));\r\n            return ok();\r\n        }\r\n\r\n        // helper functions\r\n\r\n        function ok(body?) {\r\n            return of(new HttpResponse({ status: 200, body }))\r\n                .pipe(delay(500)); // delay observable to simulate server api call\r\n        }\r\n\r\n        function error(message) {\r\n            return throwError({ error: { message } })\r\n                .pipe(materialize(), delay(500), dematerialize()); // call materialize and dematerialize to ensure delay even if an error is thrown (https://github.com/Reactive-Extensions/RxJS/issues/648);\r\n        }\r\n\r\n        function unauthorized() {\r\n            return throwError({ status: 401, error: { message: 'Unauthorized' } })\r\n                .pipe(materialize(), delay(500), dematerialize());\r\n        }\r\n\r\n        function basicDetails(user) {\r\n            const { id, username, firstName, lastName, state, country, email, contact, registrationDate, accountType, branchName, initialDepositAmount, idProofType, idDocNumber, gender, maritalStatus, refAccountholderAccountNumber } = user;\r\n            return { id, username, firstName, lastName, state, country, email, contact, registrationDate, accountType, branchName, initialDepositAmount, idProofType, idDocNumber, gender, maritalStatus, refAccountholderAccountNumber };\r\n        }\r\n\r\n        function basicLoanDetails(loan) {\r\n            const { id, loanType, loanAmount, roi, duration, userName, applyDate, accountHolder  } = loan;\r\n            return { id, loanType, loanAmount, roi, duration, userName, applyDate, accountHolder };\r\n        }\r\n\r\n        function isLoggedIn() {\r\n            return headers.get('Authorization') === 'Bearer fake-jwt-token';\r\n        }\r\n\r\n        function idFromUrl() {\r\n            const urlParts = url.split('/');\r\n            return parseInt(urlParts[urlParts.length - 1]);\r\n        }\r\n    }\r\n}\r\n\r\nexport const fakeBackendProvider = {\r\n    // use fake backend in place of Http service for backend-less development\r\n    provide: HTTP_INTERCEPTORS,\r\n    useClass: FakeBackendInterceptor,\r\n    multi: true\r\n};","export * from './auth.guard';\r\nexport * from './error.interceptor';\r\nexport * from './jwt.interceptor';\r\nexport * from './fake-backend';","import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { environment } from '@environments/environment';\r\nimport { AccountService } from '@app/_services';\r\n\r\n@Injectable()\r\nexport class JwtInterceptor implements HttpInterceptor {\r\n    constructor(private accountService: AccountService) { }\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        // add auth header with jwt if user is logged in and request is to the api url\r\n        const user = this.accountService.userValue;\r\n        const isLoggedIn = user && user.token;\r\n        const isApiUrl = request.url.startsWith(environment.apiUrl);\r\n        if (isLoggedIn && isApiUrl) {\r\n            request = request.clone({\r\n                setHeaders: {\r\n                    Authorization: `Bearer ${user.token}`\r\n                }\r\n            });\r\n        }\r\n\r\n        return next.handle(request);\r\n    }\r\n}","export class Alert {\r\n    id: string;\r\n    type: AlertType;\r\n    message: string;\r\n    autoClose: boolean;\r\n    keepAfterRouteChange: boolean;\r\n    fade: boolean;\r\n\r\n    constructor(init?:Partial<Alert>) {\r\n        Object.assign(this, init);\r\n    }\r\n}\r\n\r\nexport enum AlertType {\r\n    Success,\r\n    Error,\r\n    Info,\r\n    Warning\r\n}","export * from './alert';\r\nexport * from './user';\r\nexport * from './loan';","export class Loan {\r\n    id: number;\r\n    loanType: string;\r\n    loanAmount: string;\r\n    applyDate: Date;\r\n    issueDate: Date;\r\n    roi: number;\r\n    duration: number;\r\n    userName: string;\r\n    accountHolder: string;  \r\n}","export class User {\r\n    id: string;\r\n    username: string;\r\n    password: string;\r\n    firstName: string;\r\n    lastName: string;\r\n    token: string;\r\n    state: string;\r\n    country: string;\r\n    email: string;\r\n    contact : string;\r\n    registrationDate: Date;\r\n    accountType: string;\r\n    branchName: string;\r\n    initialDepositAmount: number;\r\n    idProofType: string;\r\n    idDocNumber: string;\r\n    gender: string;\r\n    maritalStatus: string;\r\n    refAccountholderAccountNumber: string\r\n}","import { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { environment } from '@environments/environment';\r\nimport { User } from '@app/_models';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AccountService {\r\n    private userSubject: BehaviorSubject<User>;\r\n    public user: Observable<User>;\r\n\r\n    constructor(\r\n        private router: Router,\r\n        private http: HttpClient\r\n    ) {\r\n        this.userSubject = new BehaviorSubject<User>(JSON.parse(localStorage.getItem('user')));\r\n        this.user = this.userSubject.asObservable();\r\n    }\r\n\r\n    public get userValue(): User {\r\n        return this.userSubject.value;\r\n    }\r\n\r\n    public get currentUser(): User {\r\n        return this.userSubject.value;\r\n    }\r\n\r\n    login(username, password) {\r\n        return this.http.post<User>(`${environment.apiUrl}/users/authenticate`, { username, password })\r\n            .pipe(map(user => {\r\n                // store user details and jwt token in local storage to keep user logged in between page refreshes\r\n                localStorage.setItem('user', JSON.stringify(user));\r\n                this.userSubject.next(user);\r\n                return user;\r\n            }));\r\n    }\r\n\r\n    logout() {\r\n        // remove user from local storage and set current user to null\r\n        localStorage.removeItem('user');\r\n        this.userSubject.next(null);\r\n        this.router.navigate(['/account/login']);\r\n    }\r\n\r\n    register(user: User) {\r\n        return this.http.post(`${environment.apiUrl}/users/register`, user);\r\n    }\r\n\r\n    getAll() {\r\n        return this.http.get<User[]>(`${environment.apiUrl}/users`);\r\n    }\r\n\r\n    getById(id: string) {\r\n        return this.http.get<User>(`${environment.apiUrl}/users/${id}`);\r\n    }\r\n\r\n    update(id, params) {\r\n        return this.http.put(`${environment.apiUrl}/users/${id}`, params)\r\n            .pipe(map(x => {\r\n                // update stored user if the logged in user updated their own record\r\n                if (id == this.userValue.id) {\r\n                    // update local storage\r\n                    const user = { ...this.userValue, ...params };\r\n                    localStorage.setItem('user', JSON.stringify(user));\r\n\r\n                    // publish updated user to subscribers\r\n                    this.userSubject.next(user);\r\n                }\r\n                return x;\r\n            }));\r\n    }\r\n\r\n    delete(id: string) {\r\n        return this.http.delete(`${environment.apiUrl}/users/${id}`)\r\n            .pipe(map(x => {\r\n                // auto logout if the logged in user deleted their own record\r\n                if (id == this.userValue.id) {\r\n                    this.logout();\r\n                }\r\n                return x;\r\n            }));\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { filter } from 'rxjs/operators';\r\n\r\nimport { Alert, AlertType } from '@app/_models';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AlertService {\r\n    private subject = new Subject<Alert>();\r\n    private defaultId = 'default-alert';\r\n\r\n    // enable subscribing to alerts observable\r\n    onAlert(id = this.defaultId): Observable<Alert> {\r\n        return this.subject.asObservable().pipe(filter(x => x && x.id === id));\r\n    }\r\n\r\n    // convenience methods\r\n    success(message: string, options?: any) {\r\n        this.alert(new Alert({ ...options, type: AlertType.Success, message }));\r\n    }\r\n\r\n    error(message: string, options?: any) {\r\n        this.alert(new Alert({ ...options, type: AlertType.Error, message }));\r\n    }\r\n\r\n    info(message: string, options?: any) {\r\n        this.alert(new Alert({ ...options, type: AlertType.Info, message }));\r\n    }\r\n\r\n    warn(message: string, options?: any) {\r\n        this.alert(new Alert({ ...options, type: AlertType.Warning, message }));\r\n    }\r\n\r\n    // main alert method    \r\n    alert(alert: Alert) {\r\n        alert.id = alert.id || this.defaultId;\r\n        this.subject.next(alert);\r\n    }\r\n\r\n    // clear alerts\r\n    clear(id = this.defaultId) {\r\n        this.subject.next(new Alert({ id }));\r\n    }\r\n}","export * from './account.service';\r\nexport * from './loan.service';\r\nexport * from './alert.service';\r\n","import { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { environment } from '@environments/environment';\r\nimport { Loan } from '../_models';\r\nimport { AccountService } from './account.service';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class LoanService {\r\n    private loanSubject: BehaviorSubject<Loan>;\r\n    public loan: Observable<Loan>;\r\n\r\n    constructor(\r\n        private router: Router,\r\n        private http: HttpClient,\r\n        private accountService: AccountService\r\n    ) {\r\n        this.loanSubject = new BehaviorSubject<Loan>(JSON.parse(localStorage.getItem('loan')));\r\n        this.loan = this.loanSubject.asObservable();\r\n    }\r\n\r\n    public get loanValue(): Loan {\r\n        return this.loanSubject.value;\r\n    }\r\n\r\n   \r\n    // logout() {\r\n    //     // remove loan from local storage and set current user to null\r\n    //     localStorage.removeItem('loan');\r\n    //     this.loanSubject.next(null);\r\n    //     this.router.navigate(['/loans']);\r\n    // }\r\n\r\n    register(loan: Loan) {\r\n        return this.http.post(`${environment.apiUrl}/loans/add`, loan);\r\n    }\r\n\r\n    getAll() {\r\n        return this.http.get<Loan[]>(`${environment.apiUrl}/loans`);\r\n    }\r\n\r\n    getById(id: number) {\r\n        return this.http.get<Loan>(`${environment.apiUrl}/loans/${id}`);\r\n    }\r\n\r\n    update(id, params) {\r\n        return this.http.put(`${environment.apiUrl}/loans/${id}`, params)\r\n            .pipe(map(x => {\r\n                // update stored loan if the logged in user updated their own record\r\n                    params.username = this.accountService.currentUser.username;\r\n                    // update local storage\r\n                    const loan = { ...this.loanValue, ...params };\r\n                    console.log(loan);\r\n                    localStorage.setItem('loan', JSON.stringify(loan));\r\n               \r\n                    // publish updated loan to subscribers\r\n                    this.loanSubject.next(loan);\r\n                \r\n                return x;\r\n            }));\r\n    }\r\n\r\n    delete(id: string) {\r\n        return this.http.delete(`${environment.apiUrl}/loans/${id}`)\r\n            .pipe(map(x => {\r\n                return x;\r\n            }));\r\n    }\r\n}","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { HomeComponent } from './home';\r\nimport { AuthGuard } from './_helpers';\r\n\r\nconst accountModule = () => import('./account/account.module').then(x => x.AccountModule);\r\nconst usersModule = () => import('./users/users.module').then(x => x.UsersModule);\r\nconst loansModule = () => import('./loans/loans.module').then(x => x.LoansModule);\r\n\r\nconst routes: Routes = [\r\n    { path: '', component: HomeComponent, canActivate: [AuthGuard] },\r\n    { path: 'users', loadChildren: usersModule, canActivate: [AuthGuard] },\r\n    { path: 'account', loadChildren: accountModule },\r\n    { path: 'loans', loadChildren: loansModule, canActivate: [AuthGuard] },\r\n\r\n    // otherwise redirect to home\r\n    { path: '**', redirectTo: '' }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forRoot(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }","import { Component } from '@angular/core';\r\n\r\nimport { AccountService } from './_services';\r\nimport { User } from './_models';\r\nimport { Loan } from './_models/loan';\r\n\r\n@Component({ selector: 'app', templateUrl: 'app.component.html' })\r\nexport class AppComponent {\r\n    user: User;\r\n    loan: Loan;\r\n\r\n    constructor(private accountService: AccountService) {\r\n        this.accountService.user.subscribe(x => this.user = x);\r\n    }\r\n\r\n    logout() {\r\n        this.accountService.logout();\r\n    }\r\n}","<!-- nav -->\r\n<nav class=\"navbar navbar-expand navbar-dark bg-dark\" *ngIf=\"user\">\r\n    <div class=\"navbar-nav\">\r\n        <a class=\"nav-item nav-link\" routerLink=\"/\" routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{exact: true}\">Home</a>\r\n        <a class=\"nav-item nav-link\" routerLink=\"/users\" routerLinkActive=\"active\">Profile</a>\r\n        <a class=\"nav-item nav-link\" routerLink=\"/loans\" routerLinkActive=\"active\">Loans</a>\r\n        <a class=\"nav-item nav-link\" (click)=\"logout()\">Logout</a>\r\n    </div>\r\n</nav>\r\n\r\n<!-- main app container -->\r\n<div class=\"app-container\" [ngClass]=\"{ 'bg-light': user }\">\r\n    <alert></alert>\r\n    <router-outlet></router-outlet>\r\n</div>\r\n\r\n<!-- credits -->\r\n<div class=\"text-center mt-4\">\r\n    <p>\r\n        <a>All rights reserved IBIBS Bank</a>\r\n    </p>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\n\r\n// used to create fake backend\r\nimport { fakeBackendProvider } from './_helpers';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { JwtInterceptor, ErrorInterceptor } from './_helpers';\r\nimport { AppComponent } from './app.component';\r\nimport { AlertComponent } from './_components';\r\nimport { HomeComponent } from './home';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations'\r\n\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatNativeDateModule } from '@angular/material/core';\r\n\r\n@NgModule({\r\n    imports: [\r\n        BrowserModule,\r\n        ReactiveFormsModule,\r\n        HttpClientModule,\r\n        AppRoutingModule,\r\n        BrowserAnimationsModule,\r\n        MatDatepickerModule,\r\n        MatNativeDateModule,\r\n        MatInputModule\r\n    ],\r\n    declarations: [\r\n        AppComponent,\r\n        AlertComponent,\r\n        HomeComponent\r\n    ],\r\n    providers: [\r\n        { provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true },\r\n        { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true },\r\n\r\n        // provider used to create fake backend\r\n        fakeBackendProvider\r\n    ],\r\n    bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { };","import { Component } from '@angular/core';\r\n\r\nimport { User } from '@app/_models';\r\nimport { AccountService } from '@app/_services';\r\n\r\n@Component({ templateUrl: 'home.component.html' })\r\nexport class HomeComponent {\r\n    user: User;\r\n\r\n    constructor(private accountService: AccountService) {\r\n        this.user = this.accountService.userValue;\r\n    }\r\n}","<div class=\"p-4\">\r\n    <div class=\"container\">\r\n        <h1>Hi {{user.firstName}}!</h1>\r\n        <p>Welcome to IBIBS Banking System!!</p>\r\n        <!-- <p><a routerLink=\"/users\">Manage Users</a></p> -->\r\n    </div>\r\n</div>","export * from './home.component';","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  apiUrl: 'http://localhost:4000'\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n    enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n    .catch(err => console.error(err));"]}