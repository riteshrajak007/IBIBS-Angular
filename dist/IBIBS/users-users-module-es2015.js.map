{"version":3,"sources":["./src/app/users/add-edit.component.ts","./src/app/users/add-edit.component.html","./src/app/users/layout.component.ts","./src/app/users/layout.component.html","./src/app/users/list.component.ts","./src/app/users/list.component.html","./src/app/users/users-routing.module.ts","./src/app/users/users.module.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAEkB;AAC7B;;;;;;;ICHvC,qEAAsB;IAAA,mEAAQ;IAAA,4DAAK;;;IACnC,qEAAuB;IAAA,oEAAS;IAAA,4DAAK;;;IAOrB,sEAAyC;IAAA,iFAAsB;IAAA,4DAAM;;;IADzE,0EACI;IAAA,kHAAyC;IAC7C,4DAAM;;;IADG,0DAAmC;IAAnC,oGAAmC;;;IAOxC,sEAAwC;IAAA,gFAAqB;IAAA,4DAAM;;;IADvE,0EACI;IAAA,mHAAwC;IAC5C,4DAAM;;;IADG,0DAAkC;IAAlC,mGAAkC;;;IASvC,sEAAwC;IAAA,+EAAoB;IAAA,4DAAM;;;IADtE,0EACI;IAAA,mHAAwC;IAC5C,4DAAM;;;IADG,0DAAkC;IAAlC,mGAAkC;;;IAMvC,qEAAuB;IAAA,kGAAuC;IAAA,4DAAK;;;IAInE,sEAAwC;IAAA,+EAAoB;IAAA,4DAAM;;;IAClE,sEAAyC;IAAA,iGAAsC;IAAA,4DAAM;;;IAFzF,0EACI;IAAA,mHAAwC;IACxC,mHAAyC;IAC7C,4DAAM;;;IAFG,0DAAkC;IAAlC,mGAAkC;IAClC,0DAAmC;IAAnC,oGAAmC;;;IASxC,sEAA2C;IAAA,mFAAwB;IAAA,4DAAM;;;IAD7E,0EACI;IAAA,mHAA2C;IAC/C,4DAAM;;;IADG,0DAAqC;IAArC,sGAAqC;;;IAO1C,sEAAoD;IAAA,6FAAkC;IAAA,4DAAM;;;IADhG,0EACI;IAAA,mHAAoD;IACxD,4DAAM;;;IADG,0DAA8C;IAA9C,+GAA8C;;;IASnD,sEAA0C;IAAA,kFAAwB;IAAA,4DAAM;;;IAD5E,0EACI;IAAA,mHAA0C;IAC9C,4DAAM;;;IADG,0DAAoC;IAApC,qGAAoC;;;IAOzC,sEAAuC;IAAA,8EAAmB;IAAA,4DAAM;;;IADpE,0EACI;IAAA,mHAAuC;IAC3C,4DAAM;;;IADG,0DAAiC;IAAjC,mGAAiC;;;IAStC,sEAAsC;IAAA,6EAAmB;IAAA,4DAAM;;;IADnE,0EACI;IAAA,mHAAsC;IAC1C,4DAAM;;;IADG,0DAAgC;IAAhC,kGAAgC;;;IAOrC,sEAA6C;IAAA,qFAA0B;IAAA,4DAAM;;;IADjF,0EACI;IAAA,mHAA6C;IACjD,4DAAM;;;IADG,0DAAuC;IAAvC,yGAAuC;;;IAS5C,sEAAqC;IAAA,4EAAkB;IAAA,4DAAM;;;IADjE,0EACI;IAAA,mHAAqC;IACzC,4DAAM;;;IADG,0DAA+B;IAA/B,iGAA+B;;;IAOpC,sEAAuC;IAAA,8EAAmB;IAAA,4DAAM;;;IADpE,0EACI;IAAA,mHAAuC;IAC3C,4DAAM;;;IADG,0DAAiC;IAAjC,mGAAiC;;;IAStC,sEAAqC;IAAA,4EAAkB;IAAA,4DAAM;;;IADjE,0EACI;IAAA,mHAAqC;IACzC,4DAAM;;;IADG,0DAA+B;IAA/B,iGAA+B;;;IAOpC,sEAA6D;IAAA,wFAA6B;IAAA,4DAAM;;;IADpG,0EACI;IAAA,mHAA6D;IACjE,4DAAM;;;IADG,0DAAuD;IAAvD,yHAAuD;;;IAS5D,sEAA2C;IAAA,oFAA0B;IAAA,4DAAM;;;IAD/E,0EACI;IAAA,mHAA2C;IAC/C,4DAAM;;;IADG,0DAAqC;IAArC,uGAAqC;;;IAO1C,sEAA2C;IAAA,gFAAqB;IAAA,4DAAM;;;IAD1E,0EACI;IAAA,mHAA2C;IAC/C,4DAAM;;;IADG,0DAAqC;IAArC,uGAAqC;;;IAM9C,sEAA2E;;;ADjIhF,MAAM,gBAAgB;IAOzB,YACY,WAAwB,EACxB,KAAqB,EACrB,MAAc,EACd,cAA8B,EAC9B,YAA0B;QAJ1B,gBAAW,GAAX,WAAW,CAAa;QACxB,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;QACd,mBAAc,GAAd,cAAc,CAAgB;QAC9B,iBAAY,GAAZ,YAAY,CAAc;QARtC,YAAO,GAAG,KAAK,CAAC;QAChB,cAAS,GAAG,KAAK,CAAC;IAQf,CAAC;IAEJ,QAAQ;QACJ,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QAC3C,IAAI,CAAC,SAAS,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC;QAE1B,qCAAqC;QACrC,MAAM,kBAAkB,GAAG,CAAC,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;QACrD,IAAI,IAAI,CAAC,SAAS,EAAE;YAChB,kBAAkB,CAAC,IAAI,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;SAChD;QAED,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YAC/B,SAAS,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACpC,QAAQ,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACnC,QAAQ,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACnC,QAAQ,EAAE,CAAC,EAAE,EAAE,kBAAkB,CAAC;YAElC,WAAW,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACtC,oBAAoB,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAE/C,UAAU,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACrC,OAAO,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAElC,KAAK,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAChC,OAAO,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAElC,KAAK,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAChC,6BAA6B,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAExD,MAAM,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACjC,aAAa,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAGxC,WAAW,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACtC,WAAW,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SAEzC,CAAC,CAAC;QAEH,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;YACjB,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC;iBAC/B,IAAI,CAAC,4DAAK,EAAE,CAAC;iBACb,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;SAChD;IACL,CAAC;IAED,oDAAoD;IACpD,IAAI,CAAC,KAAK,OAAO,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;IAEtC,QAAQ;QACJ,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QAEtB,yBAAyB;QACzB,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC;QAE1B,+BAA+B;QAC/B,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;YACnB,OAAO;SACV;QAED,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,IAAI,CAAC,SAAS,EAAE;YAChB,IAAI,CAAC,UAAU,EAAE,CAAC;SACrB;aAAM;YACH,IAAI,CAAC,UAAU,EAAE,CAAC;SACrB;IACL,CAAC;IAEO,UAAU;QACd,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;aACxC,IAAI,CAAC,4DAAK,EAAE,CAAC;aACb,SAAS,CAAC;YACP,IAAI,EAAE,GAAG,EAAE;gBACP,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,yBAAyB,EAAE,EAAE,oBAAoB,EAAE,IAAI,EAAE,CAAC,CAAC;gBACrF,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,EAAE,EAAE,UAAU,EAAE,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC;YAC9D,CAAC;YACD,KAAK,EAAE,KAAK,CAAC,EAAE;gBACX,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;gBAC/B,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACzB,CAAC;SACJ,CAAC,CAAC;IACX,CAAC;IAEO,UAAU;QACd,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC7B,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;aAC/C,IAAI,CAAC,4DAAK,EAAE,CAAC;aACb,SAAS,CAAC;YACP,IAAI,EAAE,GAAG,EAAE;gBACP,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,mBAAmB,EAAE,EAAE,oBAAoB,EAAE,IAAI,EAAE,CAAC,CAAC;gBAC/E,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,EAAE,EAAE,UAAU,EAAE,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC;YACjE,CAAC;YACD,KAAK,EAAE,KAAK,CAAC,EAAE;gBACX,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;gBAC/B,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACzB,CAAC;SACJ,CAAC,CAAC;IACX,CAAC;;gFA9GQ,gBAAgB;gGAAhB,gBAAgB;QCR7B,0GAAsB;QACtB,0GAAuB;QACvB,0EACI;QADqB,4IAAY,cAAU,IAAC;QAC5C,yEACI;QAAA,yEACI;QAAA,2EAAuB;QAAA,qEAAU;QAAA,4DAAQ;QACzC,sEACA;QAAA,4GACI;QAER,4DAAM;QACN,yEACI;QAAA,4EAAsB;QAAA,qEAAS;QAAA,4DAAQ;QACvC,uEACA;QAAA,8GACI;QAER,4DAAM;QACV,4DAAM;QACN,0EACI;QAAA,0EACI;QAAA,4EAAsB;QAAA,oEAAQ;QAAA,4DAAQ;QACtC,wEACA;QAAA,8GACI;QAER,4DAAM;QACN,0EACI;QAAA,6EACI;QAAA,sEACA;QAAA,4GAAuB;QAC3B,4DAAQ;QACR,wEACA;QAAA,8GACI;QAGR,4DAAM;QACV,4DAAM;QACN,0EACI;QAAA,0EACI;QAAA,6EAAyB;QAAA,wEAAY;QAAA,4DAAQ;QAC7C,wEACA;QAAA,8GACI;QAER,4DAAM;QACN,0EACI;QAAA,6EAAkC;QAAA,kFAAsB;QAAA,4DAAQ;QAChE,wEACA;QAAA,8GACI;QAER,4DAAM;QACV,4DAAM;QACN,0EACI;QAAA,0EACI;QAAA,6EAAwB;QAAA,uEAAW;QAAA,4DAAQ;QAC3C,wEACA;QAAA,8GACI;QAER,4DAAM;QACN,0EACI;QAAA,6EAAqB;QAAA,mEAAO;QAAA,4DAAQ;QACpC,wEACA;QAAA,8GACI;QAER,4DAAM;QACV,4DAAM;QACN,0EACI;QAAA,0EACI;QAAA,6EAAoB;QAAA,kEAAM;QAAA,4DAAQ;QAClC,wEACA;QAAA,8GACI;QAER,4DAAM;QACN,0EACI;QAAA,6EAA2B;QAAA,0EAAc;QAAA,4DAAQ;QACjD,wEACA;QAAA,8GACI;QAER,4DAAM;QACV,4DAAM;QACN,0EACI;QAAA,0EACI;QAAA,6EAAmB;QAAA,iEAAK;QAAA,4DAAQ;QAChC,wEACA;QAAA,8GACI;QAER,4DAAM;QACN,0EACI;QAAA,6EAAqB;QAAA,mEAAO;QAAA,4DAAQ;QACpC,wEACA;QAAA,8GACI;QAER,4DAAM;QACV,4DAAM;QACN,0EACI;QAAA,0EACI;QAAA,6EAAmB;QAAA,iEAAK;QAAA,4DAAQ;QAChC,wEACA;QAAA,8GACI;QAER,4DAAM;QACN,0EACI;QAAA,6EAA2C;QAAA,iGAAqC;QAAA,4DAAQ;QACxF,wEACA;QAAA,8GACI;QAER,4DAAM;QACV,4DAAM;QACN,0EACI;QAAA,0EACI;QAAA,6EAAyB;QAAA,wEAAY;QAAA,4DAAQ;QAC7C,wEACA;QAAA,8GACI;QAER,4DAAM;QACN,0EACI;QAAA,6EAAyB;QAAA,yEAAa;QAAA,4DAAQ;QAC9C,wEACA;QAAA,8GACI;QAER,4DAAM;QACV,4DAAM;QACN,2EACI;QAAA,8EACI;QAAA,iHAAoE;QACpE,kEACJ;QAAA,4DAAS;QACT,yEAA4C;QAAA,kEAAM;QAAA,4DAAI;QAC1D,4DAAM;QACV,4DAAO;;QA9IH,+EAAiB;QACjB,0DAAkB;QAAlB,gFAAkB;QAChB,0DAAkB;QAAlB,+EAAkB;QAIwD,0DAA6D;QAA7D,oLAA6D;QAC5H,0DAAuC;QAAvC,yGAAuC;QAMuB,0DAA4D;QAA5D,mLAA4D;QAC1H,0DAAsC;QAAtC,wGAAsC;QAQwB,0DAA4D;QAA5D,mLAA4D;QAC1H,0DAAsC;QAAtC,wGAAsC;QAOnC,0DAAkB;QAAlB,gFAAkB;QAE6C,0DAA4D;QAA5D,mLAA4D;QAC9H,0DAAsC;QAAtC,wGAAsC;QAS2B,0DAA+D;QAA/D,sLAA+D;QAChI,0DAAyC;QAAzC,2GAAyC;QAMiD,0DAAwE;QAAxE,+LAAwE;QAClK,0DAAkD;QAAlD,oHAAkD;QAQc,0DAA8D;QAA9D,qLAA8D;QAC9H,0DAAwC;QAAxC,0GAAwC;QAMwB,0DAA2D;QAA3D,kLAA2D;QAC3H,0DAAqC;QAArC,uGAAqC;QAQuB,0DAA0D;QAA1D,iLAA0D;QACtH,0DAAoC;QAApC,sGAAoC;QAMwC,0DAAiE;QAAjE,wLAAiE;QAC7I,0DAA2C;QAA3C,6GAA2C;QAQgB,0DAAyD;QAAzD,gLAAyD;QACpH,0DAAmC;QAAnC,qGAAmC;QAM6B,0DAA2D;QAA3D,kLAA2D;QAC3H,0DAAqC;QAArC,uGAAqC;QAQsB,0DAAyD;QAAzD,gLAAyD;QACpH,0DAAmC;QAAnC,qGAAmC;QAMyE,0DAAiF;QAAjF,wMAAiF;QAC7L,0DAA2D;QAA3D,6HAA2D;QAQM,0DAA+D;QAA/D,sLAA+D;QAChI,0DAAyC;QAAzC,2GAAyC;QAM+B,0DAA+D;QAA/D,sLAA+D;QACvI,0DAAyC;QAAzC,2GAAyC;QAM1C,0DAAoB;QAApB,iFAAoB;QAClB,0DAAe;QAAf,6EAAe;;6FDjIpB,gBAAgB;cAD5B,uDAAS;eAAC,EAAE,WAAW,EAAE,yBAAyB,EAAE;;;;;;;;;;;;;;AEPrD;AAAA;AAAA;AAAA;AAA0C;;;AAGnC,MAAM,eAAe;;8EAAf,eAAe;+FAAf,eAAe;QCH5B,yEACI;QAAA,yEACI;QAAA,2EAA+B;QACnC,4DAAM;QACV,4DAAM;;6FDDO,eAAe;cAD3B,uDAAS;eAAC,EAAE,WAAW,EAAE,uBAAuB,EAAE;;;;;;;;;;;;;;AEFnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AACX;;;;;;ICkBnB,qEAA8E;;;IAC9E,uEAA+B;IAAA,iEAAM;IAAA,4DAAO;;;;IARxD,qEACI;IAAA,qEAAI;IAAA,uDAAkB;IAAA,4DAAK;IAC3B,qEAAI;IAAA,uDAAiB;IAAA,4DAAK;IAC1B,qEAAI;IAAA,uDAAiB;IAAA,4DAAK;IAC1B,wEACI;IAAA,uEAAqE;IAAA,+DAAI;IAAA,4DAAI;IAC7E,6EACI;IADI,4VAA6B;IACjC,mHAAuE;IACvE,mHAA+B;IACnC,4DAAS;IACb,4DAAK;IACT,4DAAK;;;IAVG,0DAAkB;IAAlB,kFAAkB;IAClB,0DAAiB;IAAjB,iFAAiB;IACjB,0DAAiB;IAAjB,iFAAiB;IAEd,0DAA6B;IAA7B,2GAA6B;IACoD,0DAA4B;IAA5B,wFAA4B;IACtG,0DAAuB;IAAvB,oFAAuB;IACvB,0DAAwB;IAAxB,qFAAwB;;;IAI1C,qEACI;IAAA,yEACI;IAAA,sEAAmE;IACvE,4DAAK;IACT,4DAAK;;ADtBN,MAAM,aAAa;IAGtB,YAAoB,cAA8B;QAA9B,mBAAc,GAAd,cAAc,CAAgB;QAFlD,UAAK,GAAG,IAAI,CAAC;IAEwC,CAAC;IAEtD,QAAQ;QACJ,IAAI,CAAC,cAAc,CAAC,MAAM,EAAE;aACvB,IAAI,CAAC,4DAAK,EAAE,CAAC;aACb,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,QAAQ,KAAK,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,CAAC;IACrH,CAAC;IAED,UAAU,CAAC,EAAU;QACjB,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC;QAC/C,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACvB,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,EAAE,CAAC;aACzB,IAAI,CAAC,4DAAK,EAAE,CAAC;aACb,SAAS,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC;IAC3E,CAAC;;0EAjBQ,aAAa;6FAAb,aAAa;QCN1B,qEAAI;QAAA,yEAAc;QAAA,4DAAK;QAEvB,2EACI;QAAA,wEACI;QAAA,qEACI;QAAA,wEAAuB;QAAA,qEAAU;QAAA,4DAAK;QACtC,wEAAuB;QAAA,oEAAS;QAAA,4DAAK;QACrC,wEAAuB;QAAA,oEAAQ;QAAA,4DAAK;QACpC,oEAA4B;QAChC,4DAAK;QACT,4DAAQ;QACR,yEACI;QAAA,0GACI;QAWJ,yGACI;QAIR,4DAAQ;QACZ,4DAAQ;;QAlBI,2DAA0B;QAA1B,8EAA0B;QAY1B,0DAAc;QAAd,4EAAc;;6FDlBb,aAAa;cADzB,uDAAS;eAAC,EAAE,WAAW,EAAE,qBAAqB,EAAE;;;;;;;;;;;;;;AELjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACc;AAEF;AACJ;AACO;;;AAExD,MAAM,MAAM,GAAW;IACnB;QACI,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,iEAAe;QACpC,QAAQ,EAAE;YACN,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,6DAAa,EAAE;YACtC,EAAE,IAAI,EAAE,KAAK,EAAE,SAAS,EAAE,oEAAgB,EAAE;YAC5C,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,oEAAgB,EAAE;SACpD;KACJ;CACJ,CAAC;AAMK,MAAM,kBAAkB;;iGAAlB,kBAAkB;8JAAlB,kBAAkB,kBAHlB,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,EAC9B,4DAAY;mIAEb,kBAAkB,uFAFjB,4DAAY;6FAEb,kBAAkB;cAJ9B,sDAAQ;eAAC;gBACN,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;gBACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;aAC1B;;;;;;;;;;;;;;ACrBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACY;AACN;AAEa;AACP;AACJ;AACO;;AAcjD,MAAM,WAAW;;0FAAX,WAAW;gJAAX,WAAW,kBAXX;YACL,4DAAY;YACZ,kEAAmB;YACnB,wEAAkB;SACrB;mIAOQ,WAAW,mBALhB,iEAAe;QACf,6DAAa;QACb,oEAAgB,aAPhB,4DAAY;QACZ,kEAAmB;QACnB,wEAAkB;6FAQb,WAAW;cAZvB,sDAAQ;eAAC;gBACN,OAAO,EAAE;oBACL,4DAAY;oBACZ,kEAAmB;oBACnB,wEAAkB;iBACrB;gBACD,YAAY,EAAE;oBACV,iEAAe;oBACf,6DAAa;oBACb,oEAAgB;iBACnB;aACJ","file":"users-users-module-es2015.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { first } from 'rxjs/operators';\r\n\r\nimport { AccountService, AlertService } from '@app/_services';\r\n\r\n@Component({ templateUrl: 'add-edit.component.html' })\r\nexport class AddEditComponent implements OnInit {\r\n    form: FormGroup;\r\n    id: string;\r\n    isAddMode: boolean;\r\n    loading = false;\r\n    submitted = false;\r\n\r\n    constructor(\r\n        private formBuilder: FormBuilder,\r\n        private route: ActivatedRoute,\r\n        private router: Router,\r\n        private accountService: AccountService,\r\n        private alertService: AlertService\r\n    ) {}\r\n\r\n    ngOnInit() {\r\n        this.id = this.route.snapshot.params['id'];\r\n        this.isAddMode = !this.id;\r\n        \r\n        // password not required in edit mode\r\n        const passwordValidators = [Validators.minLength(6)];\r\n        if (this.isAddMode) {\r\n            passwordValidators.push(Validators.required);\r\n        }\r\n\r\n        this.form = this.formBuilder.group({\r\n            firstName: ['', Validators.required],\r\n            lastName: ['', Validators.required],\r\n            username: ['', Validators.required],\r\n            password: ['', passwordValidators],\r\n\r\n            accountType: ['', Validators.required],\r\n            initialDepositAmount: ['', Validators.required],\r\n           \r\n            branchName: ['', Validators.required],\r\n            country: ['', Validators.required],\r\n            \r\n            email: ['', Validators.required],\r\n            contact: ['', Validators.required],\r\n\r\n            state: ['', Validators.required],\r\n            refAccountholderAccountNumber: ['', Validators.required],\r\n\r\n            gender: ['', Validators.required],\r\n            maritalStatus: ['', Validators.required],\r\n           \r\n            \r\n            idProofType: ['', Validators.required],\r\n            idDocNumber: ['', Validators.required],\r\n            \r\n        });\r\n\r\n        if (!this.isAddMode) {\r\n            this.accountService.getById(this.id)\r\n                .pipe(first())\r\n                .subscribe(x => this.form.patchValue(x));\r\n        }\r\n    }\r\n\r\n    // convenience getter for easy access to form fields\r\n    get f() { return this.form.controls; }\r\n\r\n    onSubmit() {\r\n        this.submitted = true;\r\n\r\n        // reset alerts on submit\r\n        this.alertService.clear();\r\n\r\n        // stop here if form is invalid\r\n        if (this.form.invalid) {\r\n            return;\r\n        }\r\n\r\n        this.loading = true;\r\n        if (this.isAddMode) {\r\n            this.createUser();\r\n        } else {\r\n            this.updateUser();\r\n        }\r\n    }\r\n\r\n    private createUser() {\r\n        this.accountService.register(this.form.value)\r\n            .pipe(first())\r\n            .subscribe({\r\n                next: () => {\r\n                    this.alertService.success('User added successfully', { keepAfterRouteChange: true });\r\n                    this.router.navigate(['../'], { relativeTo: this.route });\r\n                },\r\n                error: error => {\r\n                    this.alertService.error(error);\r\n                    this.loading = false;\r\n                }\r\n            });\r\n    }\r\n\r\n    private updateUser() {\r\n        console.log(this.form.value);\r\n        this.accountService.update(this.id, this.form.value)\r\n            .pipe(first())\r\n            .subscribe({\r\n                next: () => {\r\n                    this.alertService.success('Update successful', { keepAfterRouteChange: true });\r\n                    this.router.navigate(['../../'], { relativeTo: this.route });\r\n                },\r\n                error: error => {\r\n                    this.alertService.error(error);\r\n                    this.loading = false;\r\n                }\r\n            });\r\n    }\r\n}","<h1 *ngIf=\"isAddMode\">Add User</h1>\r\n<h1 *ngIf=\"!isAddMode\">Edit User</h1>\r\n<form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\r\n    <div class=\"form-row\">\r\n        <div class=\"form-group col\">\r\n            <label for=\"firstName\">First Name</label>\r\n            <input type=\"text\" formControlName=\"firstName\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.firstName.errors }\" />\r\n            <div *ngIf=\"submitted && f.firstName.errors\" class=\"invalid-feedback\">\r\n                <div *ngIf=\"f.firstName.errors.required\">First Name is required</div>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group col\">\r\n            <label for=\"lastName\">Last Name</label>\r\n            <input type=\"text\" formControlName=\"lastName\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.lastName.errors }\" />\r\n            <div *ngIf=\"submitted && f.lastName.errors\" class=\"invalid-feedback\">\r\n                <div *ngIf=\"f.lastName.errors.required\">Last Name is required</div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"form-row\">\r\n        <div class=\"form-group col\">\r\n            <label for=\"username\">Username</label>\r\n            <input type=\"text\" formControlName=\"username\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.username.errors }\" />\r\n            <div *ngIf=\"submitted && f.username.errors\" class=\"invalid-feedback\">\r\n                <div *ngIf=\"f.username.errors.required\">Username is required</div>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group col\">\r\n            <label for=\"password\">\r\n                Password\r\n                <em *ngIf=\"!isAddMode\">(Leave blank to keep the same password)</em>\r\n            </label>\r\n            <input type=\"password\" formControlName=\"password\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" />\r\n            <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\r\n                <div *ngIf=\"f.password.errors.required\">Password is required</div>\r\n                <div *ngIf=\"f.password.errors.minlength\">Password must be at least 6 characters</div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"form-row\">\r\n        <div class=\"form-group col\">\r\n            <label for=\"accountType\">Account Type</label>\r\n            <input type=\"text\" formControlName=\"accountType\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.accountType.errors }\" />\r\n            <div *ngIf=\"submitted && f.accountType.errors\" class=\"invalid-feedback\">\r\n                <div *ngIf=\"f.accountType.errors.required\">Account Type is required</div>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group col\">\r\n            <label for=\"initialDepositAmount\">Initial Deposit Amount</label>\r\n            <input type=\"initialDepositAmount\" formControlName=\"initialDepositAmount\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.initialDepositAmount.errors }\" />\r\n            <div *ngIf=\"submitted && f.initialDepositAmount.errors\" class=\"invalid-feedback\">\r\n                <div *ngIf=\"f.initialDepositAmount.errors.required\">Initial Deposit Amount is required</div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"form-row\">\r\n        <div class=\"form-group col\">\r\n            <label for=\"branchName\">Branch Name</label>\r\n            <input type=\"text\" formControlName=\"branchName\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.branchName.errors }\" />\r\n            <div *ngIf=\"submitted && f.branchName.errors\" class=\"invalid-feedback\">\r\n                <div *ngIf=\"f.branchName.errors.required\">Branch Name  is required</div>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group col\">\r\n            <label for=\"country\">Country</label>\r\n            <input type=\"country\" formControlName=\"country\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.country.errors }\" />\r\n            <div *ngIf=\"submitted && f.country.errors\" class=\"invalid-feedback\">\r\n                <div *ngIf=\"f.country.errors.required\">Country is required</div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"form-row\">\r\n        <div class=\"form-group col\">\r\n            <label for=\"gender\">Gender</label>\r\n            <input type=\"text\" formControlName=\"gender\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.gender.errors }\" />\r\n            <div *ngIf=\"submitted && f.gender.errors\" class=\"invalid-feedback\">\r\n                <div *ngIf=\"f.gender.errors.required\">Gender  is required</div>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group col\">\r\n            <label for=\"maritalStatus\">Marital Status</label>\r\n            <input type=\"maritalStatus\" formControlName=\"maritalStatus\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.maritalStatus.errors }\" />\r\n            <div *ngIf=\"submitted && f.maritalStatus.errors\" class=\"invalid-feedback\">\r\n                <div *ngIf=\"f.maritalStatus.errors.required\">Marital Status is required</div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"form-row\">\r\n        <div class=\"form-group col\">\r\n            <label for=\"email\">Email</label>\r\n            <input type=\"text\" formControlName=\"email\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\" />\r\n            <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\r\n                <div *ngIf=\"f.email.errors.required\">email  is required</div>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group col\">\r\n            <label for=\"contact\">Contact</label>\r\n            <input type=\"contact\" formControlName=\"contact\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.contact.errors }\" />\r\n            <div *ngIf=\"submitted && f.contact.errors\" class=\"invalid-feedback\">\r\n                <div *ngIf=\"f.contact.errors.required\">contact is required</div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"form-row\">\r\n        <div class=\"form-group col\">\r\n            <label for=\"state\">State</label>\r\n            <input type=\"text\" formControlName=\"state\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.state.errors }\" />\r\n            <div *ngIf=\"submitted && f.state.errors\" class=\"invalid-feedback\">\r\n                <div *ngIf=\"f.state.errors.required\">State  is required</div>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group col\">\r\n            <label for=\"refAccountholderAccountNumber\">Reference Accountholder AccountNumber</label>\r\n            <input type=\"refAccountholderAccountNumber\" formControlName=\"refAccountholderAccountNumber\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.refAccountholderAccountNumber.errors }\" />\r\n            <div *ngIf=\"submitted && f.refAccountholderAccountNumber.errors\" class=\"invalid-feedback\">\r\n                <div *ngIf=\"f.refAccountholderAccountNumber.errors.required\">Reference A/C no. is required</div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"form-row\">\r\n        <div class=\"form-group col\">\r\n            <label for=\"idProofType\">Id ProofType</label>\r\n            <input type=\"text\" formControlName=\"idProofType\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.idProofType.errors }\" />\r\n            <div *ngIf=\"submitted && f.idProofType.errors\" class=\"invalid-feedback\">\r\n                <div *ngIf=\"f.idProofType.errors.required\">Id Proof Type  is required</div>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group col\">\r\n            <label for=\"idDocNumber\">id Doc Number</label>\r\n            <input type=\"idDocNumber\" formControlName=\"idDocNumber\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.idDocNumber.errors }\" />\r\n            <div *ngIf=\"submitted && f.idDocNumber.errors\" class=\"invalid-feedback\">\r\n                <div *ngIf=\"f.idDocNumber.errors.required\">Id Number is required</div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"form-group\">\r\n        <button [disabled]=\"loading\" class=\"btn btn-primary\">\r\n            <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\r\n            Save\r\n        </button>\r\n        <a routerLink=\"/users\" class=\"btn btn-link\">Cancel</a>\r\n    </div>\r\n</form>","import { Component } from '@angular/core';\r\n\r\n@Component({ templateUrl: 'layout.component.html' })\r\nexport class LayoutComponent { }","<div class=\"p-4\">\r\n    <div class=\"container\">\r\n        <router-outlet></router-outlet>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { first } from 'rxjs/operators';\r\n\r\nimport { AccountService } from '@app/_services';\r\n\r\n@Component({ templateUrl: 'list.component.html' })\r\nexport class ListComponent implements OnInit {\r\n    users = null;\r\n\r\n    constructor(private accountService: AccountService) {}\r\n\r\n    ngOnInit() {\r\n        this.accountService.getAll()\r\n            .pipe(first())\r\n            .subscribe(users => this.users = users.filter(x => x.username === this.accountService.currentUser.username));\r\n    }\r\n\r\n    deleteUser(id: string) {\r\n        const user = this.users.find(x => x.id === id);\r\n        user.isDeleting = true;\r\n        this.accountService.delete(id)\r\n            .pipe(first())\r\n            .subscribe(() => this.users = this.users.filter(x => x.id !== id));\r\n    }\r\n}","<h1>Manage Profile</h1>\r\n<!-- <a routerLink=\"add\" class=\"btn btn-sm btn-success mb-2\">Add User</a> -->\r\n<table class=\"table table-striped\">\r\n    <thead>\r\n        <tr>\r\n            <th style=\"width: 30%\">First Name</th>\r\n            <th style=\"width: 30%\">Last Name</th>\r\n            <th style=\"width: 30%\">Username</th>\r\n            <th style=\"width: 10%\"></th>\r\n        </tr>\r\n    </thead>\r\n    <tbody>\r\n        <tr *ngFor=\"let user of users\">\r\n            <td>{{user.firstName}}</td>\r\n            <td>{{user.lastName}}</td>\r\n            <td>{{user.username}}</td>\r\n            <td style=\"white-space: nowrap\">\r\n                <a routerLink=\"edit/{{user.id}}\" class=\"btn btn-sm btn-primary mr-1\">Edit</a>\r\n                <button (click)=\"deleteUser(user.id)\" class=\"btn btn-sm btn-danger btn-delete-user\" [disabled]=\"user.isDeleting\">\r\n                    <span *ngIf=\"user.isDeleting\" class=\"spinner-border spinner-border-sm\"></span>\r\n                    <span *ngIf=\"!user.isDeleting\">Delete</span>\r\n                </button>\r\n            </td>\r\n        </tr>\r\n        <tr *ngIf=\"!users\">\r\n            <td colspan=\"4\" class=\"text-center\">\r\n                <span class=\"spinner-border spinner-border-lg align-center\"></span>\r\n            </td>\r\n        </tr>\r\n    </tbody>\r\n</table>","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { LayoutComponent } from './layout.component';\r\nimport { ListComponent } from './list.component';\r\nimport { AddEditComponent } from './add-edit.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '', component: LayoutComponent,\r\n        children: [\r\n            { path: '', component: ListComponent },\r\n            { path: 'add', component: AddEditComponent },\r\n            { path: 'edit/:id', component: AddEditComponent }\r\n        ]\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class UsersRoutingModule { }","import { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { UsersRoutingModule } from './users-routing.module';\r\nimport { LayoutComponent } from './layout.component';\r\nimport { ListComponent } from './list.component';\r\nimport { AddEditComponent } from './add-edit.component';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        ReactiveFormsModule,\r\n        UsersRoutingModule\r\n    ],\r\n    declarations: [\r\n        LayoutComponent,\r\n        ListComponent,\r\n        AddEditComponent\r\n    ]\r\n})\r\nexport class UsersModule { }"],"sourceRoot":"webpack:///"}